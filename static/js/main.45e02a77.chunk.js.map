{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","Cardlist","robots","robotCards","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","useState","setRobots","searchfield","setSearchfield","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WACpD,gCACI,6BAAKL,IACL,4BAAIC,WCcLK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACPC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAO,cAAC,EAAD,CAECT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAOjB,OACI,8BACKH,KCAEI,EAdG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCPI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,Y,MC+BJC,MA7Bf,WAAiB,IAAD,EACcC,mBAAS,IADvB,mBACPlB,EADO,KACCmB,EADD,OAEwBD,mBAAS,IAFjC,mBAEPE,EAFO,KAEMC,EAFN,KAIhBC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIR,EAAUQ,QAC1B,IAEH,IAIMC,EAAiB5B,EAAO6B,QAAO,SAAAC,GACnC,OAAOA,EAAMrC,KAAKsC,cAAcC,SAASZ,EAAYW,kBAErD,OAAQ/B,EAAOiC,OACf,sBAAKrC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAVQ,SAAC4B,GACtBb,EAAea,EAAMC,OAAOC,UAU1B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUpC,OAAQ4B,SALE,oBAAIhC,UAAU,KAAd,sBCZXyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.45e02a77.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt='robots'/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst Cardlist = ({ robots }) => {\r\n       const robotCards = robots.map((user, i) => {\r\n        return <Card \r\n                key={i} \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email} \r\n                />\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            {robotCards}\r\n        </div>\r\n    ); \r\n    \r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n            className='pa3 ba b--green bg-lightest-blue' \r\n            type='search' \r\n            placeholder='search robots' \r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '5px solid black', height: '800px' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { useState, useEffect } from \"react\";\nimport Cardlist from '../components/Cardlist';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\n\nfunction App () {\n  const [robots, setRobots] = useState([]);\n  const [searchfield, setSearchfield] = useState('');\n \nuseEffect(() => {\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => setRobots(users));\n}, []);\n\nconst onSearchChange = (event) => {\n  setSearchfield(event.target.value)\n};\n\nconst filteredRobots = robots.filter(robot => {\n  return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n});\n  return !robots.length ? <h1 className=\"tc\">Loading</h1> : (\n  <div className='tc'>\n    <h1 className=\"f1\">RoboFriends</h1>\n    <SearchBox searchChange={onSearchChange}/>\n    <Scroll>\n      <Cardlist robots={filteredRobots}/>\n    </Scroll>\n    </div>\n  );\n  \n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}